log_in:
    *** CURRENTLY MALFORMED DUE TO EMAIL SETUP
    URL: https://jwfjuifdunib5gmornhrs4nm4a0pitnm.lambda-url.us-east-2.on.aws/
    headers: {'token' : 'zpdkwA.2_kLU@zg'}
    payload: Expecting an 'email' and 'password' field (JSON)
    response:
        IF (token is correct, login incorrect):
            = {'token_success' : true, 'login_success' : false}
        IF (token is correct, login correct):
            = {'token_success' : true, 'login_success' : true}
        IF (token is incorrect):
            = {'token_success' : false}

sign_up:
    URL: https://rdsn74oehsmrcoc2spf6aiw4iy0hqcbv.lambda-url.us-east-2.on.aws/
    headers: {'token' : 'zpdkwA.2_kLU@zg'}
    payload: expecting an 'email', 'password' and 'name' field (JSON)
    IF (token is correct, email available):
        = {'token_success' : true, 'signup_success' : true}
    IF (token is correct, email unavailable):
        = {'token_success' : true, 'signup_success' : false}
    IF (token is incorrect):
        = {'token_success' : false}

change_settings:
    URL: https://yimbhwmzyzeikdbjqylkdonwoy0czhwq.lambda-url.us-east-2.on.aws/
    headers: {'token' : 'zpdkwA.2_kLU@zg'}
    payload: expecting an 'email' field (JSON)
    optional payload: 'password' and 'name' field (JSON)
    IF (token is correct, email correct):
        = {'token_success' : true, 'change_success' : true}
    IF (token is correct, email incorrect):
        = {'token_success' : true, 'change_success' : false}
    IF (token is incorrect):
        = {'token_success' : false}

new_expense:
    URL: https://osggc3wtegomn5yliv5heqkpji0ohbfk.lambda-url.us-east-2.on.aws/
    headers: {'token' : 'zpdkwA.2_kLU@zg'}
    payload: 'title' (string), 'group_id' (int), 'expense' (dict), 'expense_time' (date), due_date (date) fields (JSON)
    expense dict contains user email strings as keys and amount due/owed doubles as values. All values positive,
    first key/value pair is user owed money (who submitted request)
    IF (token is incorrect):
        = {'token_success' : false}
    ELSE :
        IF (expense totals don't add up or one or more are negative or one or more users not in specified group):
            = {'token_success' : true, 'submit_success' = false}
        ELSE :
            = {'token_success' : true, 'submit_success' = true}